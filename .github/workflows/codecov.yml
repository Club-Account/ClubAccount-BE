name: Codecov Coverage Report

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  codecov:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Debug Test Source
        run: |
          echo "🔍 Checking test source files..."
          if [ -d "src/test/java" ] && [ "$(ls -A src/test/java)" ]; then
            echo "✅ Test files found!"
            ls -lR src/test/java
          else
            echo "⚠️ No test files found! Skipping tests."
            exit 0
          fi

      - name: Run Tests and Generate Coverage Report
        run: |
          echo "🚀 Running tests and generating JaCoCo coverage report..."
          if [ -d "src/test/java" ] && [ "$(ls -A src/test/java)" ]; then
            ./gradlew clean test jacocoTestReport --no-build-cache --rerun-tasks --continue || echo "⚠️ Some tests failed, but continuing..."
          else
            echo "⚠️ No tests available, skipping test execution."
          fi

      - name: Debug JaCoCo Report Path
        run: |
          echo "🔍 Checking JaCoCo Report Path..."
          if [ -d "./build/reports/jacoco/test/" ]; then
            ls -l ./build/reports/jacoco/test/
          else
            echo "⚠️ JaCoCo report directory NOT FOUND!"
          fi

      - name: Ensure JaCoCo Report Exists Before Upload
        run: |
          if [ -f ./build/reports/jacoco/test/jacocoTestReport.xml ]; then
            echo "✅ JaCoCo report found!"
          else
            echo "⚠️ No JaCoCo report found, skipping upload."
            exit 0
          fi

      - name: Upload Coverage Report to Codecov
        if: success()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          fail_ci_if_error: false  # 🚀 JaCoCo 리포트가 없을 경우 CI 실패 방지
          verbose: true
